[{"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\index.js":"1","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\reportWebVitals.js":"2","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\App.js":"3","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\Header.js":"4","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\InfoBox.js":"5","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\Results.js":"6","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\Map.js":"7","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\StateProvider.js":"8","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\reducer.js":"9","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\Table.js":"10","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\util.js":"11","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\LineGraph.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":5386,"mtime":1609611167874,"results":"16","hashOfConfig":"14"},{"size":2758,"mtime":1608473559100,"results":"17","hashOfConfig":"18"},{"size":957,"mtime":1609611609950,"results":"19","hashOfConfig":"14"},{"size":1521,"mtime":1608458100810,"results":"20","hashOfConfig":"18"},{"size":772,"mtime":1609608690210,"results":"21","hashOfConfig":"14"},{"size":380,"mtime":1608473176423,"results":"22","hashOfConfig":"18"},{"size":447,"mtime":1608473835485,"results":"23","hashOfConfig":"18"},{"size":542,"mtime":1608744440230,"results":"24","hashOfConfig":"14"},{"size":2193,"mtime":1609610925719,"results":"25","hashOfConfig":"14"},{"size":3700,"mtime":1609539667414,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1ez4sy",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"dv4rf0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\index.js",[],["58","59"],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\App.js",["60","61"],"import './App.css';\nimport InfoBox from './Components/InfoBox';\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Button } from '@material-ui/core'\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport Table from './Components/Table';\nimport { sortData } from './util';\nimport LineGraph from './Components/LineGraph';\nimport Map from './Components/Map';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n\n  \n      // state is a var in react \n      const [countries, setCountries] = useState([]);\n\n      const [country, setCountry] = useState('worldwide');\n  \n      const [countryInfo, setCountryInfo] = useState({});\n\n      const [tableData, setTableData] = useState([]);\n\n      const [mapCenter, setMapCenter] = useState({ lat: 5.6437397, lng : -0.162709 });\n\n      const [mapZoom, setMapZoom] = useState(3);\n\n      const [mapCountries, setMapCountries] = useState([]);\n\n\n        // load worldwide data on load \n      useEffect(() => {\n        //   lets data fro worldwide stats on page load \n        fetch('https://disease.sh/v3/covid-19/all')\n        .then(response => response.json())\n        .then(data => {\n            setCountryInfo(data);\n        })\n\n    },[])\n\n\n  \n      // useEffect runs a code based on a codition \n      // so we are fetching coutry details \n      // we use async func when collecting api data  \n      useEffect(() => {\n          const getCountriesData = async () => {\n              await fetch('https://disease.sh/v3/covid-19/countries')\n              .then((response) => response.json())\n              .then((data) => {\n                  const countries = data.map((country) => ({\n                      name: country.country,\n                      value: country.countryInfo.iso2\n                  }));\n  \n                  setCountries(countries);\n\n                  //   sorting data as it cones \n                const sortedCountryData = sortData(data);\n                setTableData(sortedCountryData);\n\n                // dat to dtraw circles \n                setMapCountries(data);\n              });\n          };   \n            // calling fuct ion \n          getCountriesData();\n      },[]);\n      // empty [] means the code runs when componenet loads \n  \n      \n\n  \n    //   when country changes info changes \n      const onCountryChange = async (event) => {\n          const countryCode = event.target.value;\n          \n          const url = countryCode === 'worldwide'\n              ? 'https://disease.sh/v3/covid-19/all'\n              : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n              \n          await fetch(url)\n          .then(response => response.json())\n          .then(data => { \n              \n              // all data from api response \n              setCountry(countryCode)\n              setCountryInfo(data);\n              \n            //   console.log('country info : ', countryInfo)\n            var lat = data.countryInfo.lat\n            var long = data.countryInfo.long\n\n            setMapCenter({ lat: lat, lng : long })\n\n            // data.countryInfo.lat, data.countryInfo.long\n\n            \n\n            setMapZoom(10)     \n            \n          });\n      };\n\n      \n      \n      \n  \n  \n\n  return (\n    <div className=\"app\">\n\n    <div className=\"app__left\">\n          \n      {/* header */}\n        <div className='header'>\n            <h1>COVID-19 TRACKER</h1>\n                {/* we want to loop through all the countries  */}\n                <FormControl className='header__dropdown'>\n                    <Select \n                    variant='outlined' \n                    onChange={onCountryChange}\n                    value={country}>\n                    <MenuItem className='header__dropdownMenu' value='worldwide'>Worldwide</MenuItem>\n                        {/* react allows us to write js inside */}\n\n                        {\n                            countries.map((country) =>  (\n                                <MenuItem value={country.value}>{country.name}</MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl>\n            \n        </div>\n\n\n        {/* info boxes  */}\n        <div className='app__stats'>\n            <InfoBox\n                title='Coronavirus Cases'\n                cases={countryInfo.todayCases}\n                total={countryInfo.cases}\n                \n            />\n\n            <InfoBox\n                title='Recovered'\n                cases={countryInfo.todayRecovered}\n                total={countryInfo.recovered}\n                \n            />\n\n            <InfoBox\n                title='Deaths'\n                cases={countryInfo.todayDeaths}\n                total={countryInfo.deaths}\n                \n            />\n        </div>\n\n        <Map\n            countries={mapCountries}\n            center={mapCenter}\n            zoom={mapZoom}\n        />\n    </div>\n\n\n                        {/* right side of page  */}\n    <div  className='app__right'>\n        <Card>            \n            <CardContent>\n                {/* table  */}\n                <h3>live cases by country</h3>\n                <Table countries={tableData} />\n\n                {/* graph  */}\n                <LineGraph />\n            </CardContent> \n        </Card>\n\n        \n    </div>\n    \n    \n\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\Header.js",["62"],"import React, { useState, useEffect } from 'react';\r\nimport { MenuItem, FormControl, Select, Button } from '@material-ui/core'\r\nimport './CSS/Header.css';\r\nimport { useStateValue } from '../StateProvider';\r\nimport { actionTypes } from '../reducer';\r\n\r\nconst Header = () => {\r\n\r\n    // state is a var in react \r\n    const [countries, setCountries] = useState([]);\r\n\r\n    const [country, dispatch] = useStateValue();\r\n\r\n    const [countryInfo, setCountryInfo] = useState({});\r\n\r\n    // useEffect runs a code based on a codition \r\n    // so we are fetching coutry details \r\n    // we use aync func when collecting api data  \r\n    useEffect(() => {\r\n        const getCountryData = async () => {\r\n            await fetch('https://disease.sh/v3/covid-19/countries')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const countries = data.map((country) => ({\r\n                    name: country.country,\r\n                    value: country.countryInfo.iso2\r\n                }));\r\n\r\n                setCountries(countries);\r\n            })\r\n        };\r\n        getCountryData();\r\n    },[]);\r\n    // empty [] means the code runs when componenet loads \r\n\r\n\r\n    const onCountryChange = async (event) => {\r\n        const countryCode = event.target.value;\r\n\r\n        const url = countryCode === 'worldwide'\r\n            ? 'https://disease.sh/v3/covid-19/all'\r\n            : `https://disease.sh/v3/covid-19/countries/${country}`\r\n\r\n        await fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => { \r\n            dispatch({\r\n                type: actionTypes.SET_COUNTRY,\r\n                country: countryCode,\r\n            });\r\n\r\n            // all data from api response \r\n            setCountryInfo(data);\r\n            console.log('country info : ', countryInfo)\r\n        });\r\n    };\r\n\r\n    console.log('country info : ', countryInfo)\r\n\r\n    return (\r\n        <div className='header'>\r\n            <h1>COVID-19 TRACKER</h1>\r\n                {/* we want to loop through all the countries  */}\r\n                <FormControl className='header__dropdown'>\r\n                    <Select variant='outlined' \r\n                    onChange={onCountryChange}\r\n                    value={country}>\r\n                    <MenuItem value='worldwide'>Worldwide</MenuItem>\r\n                        {/* react allows us to write js inside */}\r\n\r\n                        {\r\n                            countries.map((country) =>  (\r\n                                <MenuItem value={country.value} >{country.name}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n",["63","64"],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\InfoBox.js",[],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\Results.js",["65"],"import React from 'react';\r\nimport InfoBox from './InfoBox';\r\nimport './CSS/Results.css';\r\nimport Map from './Map';\r\nimport Header from './Header';\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\n\r\nconst Results = () => {\r\n    return (\r\n        <div className='results'>\r\n            <div className='results__left'>\r\n            <Header />\r\n                <div className='results__info'>\r\n                    <InfoBox\r\n                        title='Coronavirus Cases'\r\n                        total={400}\r\n                        cases={4567}\r\n                    />\r\n\r\n                    <InfoBox\r\n                        title='Recovered'\r\n                        total={400}\r\n                        cases={4567}\r\n                    />\r\n\r\n                    <InfoBox\r\n                        title='Deaths'\r\n                        total={400}\r\n                        cases={4567}\r\n                    />\r\n                </div>\r\n\r\n                <div className='map'>\r\n                    <Map />\r\n                </div>\r\n            </div>\r\n\r\n            <Card className='results__right'>\r\n                \r\n                <CardContent>\r\n                    {/* table  */}\r\n                    <h3>live cases by country</h3>\r\n\r\n                    {/* graph  */}\r\n\r\n                    <h3>live cases by country</h3>\r\n                </CardContent>\r\n\r\n                \r\n            </Card>\r\n            \r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n",["66","67"],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\Map.js",["68","69"],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\StateProvider.js",[],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\reducer.js",[],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\Table.js",[],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\util.js",[],"C:\\Users\\GEORGE\\Desktop\\Projects\\React\\covid-tracker\\src\\Components\\LineGraph.js",["70"],"import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport numeral from 'numeral'\r\n\r\n\r\nconst options = {\r\n    scales: {\r\n        xAxes: [{\r\n            type: 'time',\r\n            time: {\r\n                time: 'MM/DD/YY',\r\n                tooltipFormat: 'll',\r\n            },            \r\n        }],\r\n        yAxes: [{\r\n            gridlines: {\r\n                display: false,\r\n            },\r\n\r\n            ticks: {\r\n                // imclude dollar sign in backticks\r\n                callback: function(value, index, values) {\r\n                    return numeral(value).format('+0,0')\r\n                }\r\n            }\r\n        }],\r\n        },   \r\n        \r\n\r\n    legend: {\r\n            display: false      \r\n    },\r\n\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n\r\n    // showLines: false, // disable for all datasets\r\n\r\n    maintainAspectRatio: false,\r\n\r\n    tooltips: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function(tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format('+0,0')\r\n            },\r\n        },\r\n    },\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst LineGraph = ({caseType='cases'}) => {\r\n\r\n    const [data, setData] = useState({});\r\n\r\n    // this function si for tranforming all the data to the right format to build th graph \r\n    const buildChartData = (data, caseType='cases') => {\r\n        const chartData = [];\r\n        let lastDataPoint;\r\n        // data[caseType].forEach((date) => {\r\n            // to use forEach it must be an array\r\n\r\n        for(let date in data.cases) {\r\n            // lastDataPoint gets its value from date above \r\n            if (lastDataPoint) {\r\n                // we pass the x and y values here tombuild chart \r\n                const newDataPoint = {\r\n                   x: date,\r\n                   y: data[caseType][date] - lastDataPoint,\r\n                };\r\n                // we push the x and y values into the chart builder \r\n               chartData.push(newDataPoint)\r\n            }\r\n            lastDataPoint = data[caseType][date];\r\n        };\r\n        return chartData;\r\n   }\r\n\r\n    // use data for last 120 data  \r\n    // 'https://disease.sh/v3/covid-19/countries'\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    // we can pass in casetype here on component load\r\n                    const chartData = buildChartData(data, 'cases');\r\n                    // updates var data to chartData \r\n                    setData(chartData);\r\n            });\r\n        };\r\n        \r\n        fetchData();\r\n    }, [caseType])\r\n\r\n\r\n\r\n    const dataSet = {\r\n        dataset: [{\r\n            data: data,\r\n            backgroundColor: 'rgba(204, 16, 52, 0.2)',\r\n            borderColor: '#CC1034',\r\n            label : 'Month'\r\n        }]\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className='graph'>\r\n            <h1>Graph</h1>\r\n\r\n            {data?.length > 0 && (\r\n                <Line          \r\n\r\n                options = {options}\r\n\r\n                data = {{\r\n                    datasets: [\r\n                        {\r\n                            backgroundColor: 'rgba(204, 16, 52, 0.5)',\r\n                            borderColor: '#CC1034',\r\n                            data: data\r\n                        }\r\n                    ]\r\n                }}      \r\n                \r\n            />\r\n            )}\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":41,"nodeType":"77","messageId":"78","endLine":4,"endColumn":47},{"ruleId":"75","severity":1,"message":"79","line":5,"column":29,"nodeType":"77","messageId":"78","endLine":5,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":2,"column":41,"nodeType":"77","messageId":"78","endLine":2,"endColumn":47},{"ruleId":"71","replacedBy":"80"},{"ruleId":"73","replacedBy":"81"},{"ruleId":"75","severity":1,"message":"79","line":6,"column":29,"nodeType":"77","messageId":"78","endLine":6,"endColumn":39},{"ruleId":"71","replacedBy":"82"},{"ruleId":"73","replacedBy":"83"},{"ruleId":"75","severity":1,"message":"84","line":3,"column":35,"nodeType":"77","messageId":"78","endLine":3,"endColumn":41},{"ruleId":"75","severity":1,"message":"85","line":3,"column":43,"nodeType":"77","messageId":"78","endLine":3,"endColumn":48},{"ruleId":"75","severity":1,"message":"86","line":113,"column":11,"nodeType":"77","messageId":"78","endLine":113,"endColumn":18},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.",["87"],["88"],["87"],["88"],"'Marker' is defined but never used.","'Popup' is defined but never used.","'dataSet' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]